LPCSTR Device::m_convert_fx =

"#if SHADER_MODEL >= 0x400\n"
"\n"
"struct VS_INPUT\n"
"{\n"
"	float4 p : POSITION; \n"
"	float2 t : TEXCOORD0;\n"
"	float4 c0 : COLOR0;\n"
"	float4 c1 : COLOR1;\n"
"};\n"
"\n"
"struct VS_OUTPUT\n"
"{\n"
"	float4 p : SV_Position;\n"
"	float3 t : TEXCOORD0;\n"
"	float4 c0 : COLOR0;\n"
"	float4 c1 : COLOR1;\n"
"};\n"
"\n"
"struct PS_INPUT\n"
"{\n"
"	float4 p : SV_Position;\n"
"	float3 t : TEXCOORD0;\n"
"	float4 c0 : COLOR0;\n"
"	float4 c1 : COLOR1;\n"
"};\n"
"\n"
"struct PS_OUTPUT\n"
"{\n"
"	float4 c : SV_Target0;\n"
"};\n"
"\n"
"cbuffer vs_cb : register(c0)\n"
"{\n"
"	float4 vs_scale;\n"
"	float4 vs_offset;\n"
"};\n"
"\n"
"cbuffer ps_cb : register(c0)\n"
"{\n"
"	float4 ps_texture_size;\n"
"};\n"
"\n"
"Texture2D Texture0 : register(t0);\n"
"Texture2D Texture1 : register(t1);\n"
"SamplerState Sampler0 : register(s0);\n"
"SamplerState Sampler1 : register(s1);\n"
"\n"
"float4 sample_c0(float2 uv)\n"
"{\n"
"	return Texture0.Sample(Sampler0, uv);\n"
"}\n"
"\n"
"float4 sample_c1(float2 uv)\n"
"{\n"
"	return Texture1.Sample(Sampler1, uv);\n"
"}\n"
"\n"
"#elif SHADER_MODEL <= 0x300\n"
"\n"
"struct VS_INPUT\n"
"{\n"
"	float4 p : POSITION; \n"
"	float2 t : TEXCOORD0;\n"
"	float4 c0 : COLOR0;\n"
"	float4 c1 : COLOR1;\n"
"};\n"
"\n"
"struct VS_OUTPUT\n"
"{\n"
"	float4 p : POSITION;\n"
"	float3 t : TEXCOORD0;\n"
"	float4 c0 : COLOR0;\n"
"	float4 c1 : COLOR1;\n"
"};\n"
"\n"
"struct PS_INPUT\n"
"{\n"
"	float4 p : VPOS;\n"
"	float3 t : TEXCOORD0;\n"
"	float4 c0 : COLOR0;\n"
"	float4 c1 : COLOR1;\n"
"};\n"
"\n"
"struct PS_OUTPUT\n"
"{\n"
"	float4 c : COLOR;\n"
"};\n"
"\n"
"float4 vs_scale : register(c0);\n"
"float4 vs_offset : register(c1);\n"
"\n"
"float4 ps_texture_size : register(c0);\n"
"\n"
"sampler Texture0 : register(s0);\n"
"sampler Texture1 : register(s1);\n"
"\n"
"float4 sample_c0(float2 uv)\n"
"{\n"
"	return tex2D(Texture0, uv);\n"
"}\n"
"\n"
"float4 sample_c1(float2 uv)\n"
"{\n"
"	return tex2D(Texture1, uv);\n"
"}\n"
"\n"
"#endif\n"
"\n"
"VS_OUTPUT vs_main0(VS_INPUT input)\n"
"{\n"
"	VS_OUTPUT output;\n"
"\n"
"	output.p = input.p * vs_scale + vs_offset;\n"
"	output.p.w = 1.0f;\n"
"	output.t = float3(input.t * input.p.w, input.p.w);\n"
"#if SHADER_MODEL < 0x400\n"
"	output.c0 = input.c0.bgra;\n"
"	output.c1 = input.c1.bgra;\n"
"#else\n"
"	output.c0 = input.c0;\n"
"	output.c1 = input.c1;\n"
"#endif\n"
"\n"
"	return output;\n"
"}\n"
"\n"
"PS_OUTPUT ps_main0(PS_INPUT input)\n"
"{\n"
"	PS_OUTPUT output;\n"
"\n"
"	output.c = input.c0 + input.c1;\n"
"\n"
"	return output;\n"
"}\n"
"\n"
"PS_OUTPUT ps_main1(PS_INPUT input)\n"
"{\n"
"	PS_OUTPUT output;\n"
"\n"
"	output.c = sample_c0(input.t.xy * rcp(input.t.z)) * input.c0 + input.c1;\n"
"\n"
"	return output;\n"
"}\n"
"\n"
"static float yo = - 16.0f / 255;\n"
"static float ys = 255.0f / (240 - 16);\n"
"\n"
"static float4x4 r2y =\n"
"{\n"
"	0.299, 0.587, 0.114, yo,\n"
"	-0.147, -0.289, 0.437, 0,\n"
"	0.615, -0.515, -0.100, 0,\n"
"	0, 0, 0, 1\n"
"};\n"
"\n"
"static float4x4 y2r =\n"
"{\n"
"	ys, 0.0, 1.140, 0,\n"
"	ys, -0.394, -0.581, 0,\n"
"	ys, 2.028, 0.0, 0,\n"
"	0, 0, 0, 1\n"
"};\n"
"\n"
"PS_OUTPUT ps_main2(PS_INPUT input)\n"
"{\n"
"	PS_OUTPUT output;\n"
"\n"
"	float4 c = sample_c0(input.t.xy);\n"
"\n"
"	output.c = mul(mul(y2r, r2y), c);\n"
"\n"
"	return output;\n"
"}\n"
"\n"
"PS_OUTPUT ps_main3(PS_INPUT input)\n"
"{\n"
"	PS_OUTPUT output;\n"
"\n"
"	float4 c = sample_c0(input.t.xy);\n"
"\n"
"	output.c = c;\n"
"\n"
"	return output;\n"
"}\n"
;
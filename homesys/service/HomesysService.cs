//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.8.3928.0.
// 
namespace Homesys.Web {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HomesysBinding", Namespace="http://homesyslite.timbuktu.hu/")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(UserTvStat))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TvStat))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GuideMovieRecStat))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GuideProgramRecStat))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GuideProgram))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GuideChannel))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RelatedProgram))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(DVBCategory))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(MovieType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Cast))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Movie))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(EpisodeCast))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Episode))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Program))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Channel))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TuneRequest))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TuneRequestPackage))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Recording))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Machine))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Tuner))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TunerData))]
    public partial class HomesysService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InitiateSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateSessionWithLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnregisterMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMachinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRecordingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRecordingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRecordingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRecordingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRecordingByPortIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRecordingByPortIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRecordingsByPortIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback VersionCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTuneRequestPackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTuneRequestPackagesForRegionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelRankOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUnknownChannelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMovieRankOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEpisodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMoviesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCastOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMovieTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDVBCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelatedProgramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEPGOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEPGLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNowOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchMovieOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGuideOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGuideProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGuideProgramRecStatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGuideMovieRecStatOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTvStatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTvStatByPortIdOperationCompleted;
        
        /// <remarks/>
        public HomesysService() {
            this.Url = "http://homesyslite.timbuktu.hu/service/index.php";
        }
        
        /// <remarks/>
        public event InitiateSessionCompletedEventHandler InitiateSessionCompleted;
        
        /// <remarks/>
        public event SetLanguageCompletedEventHandler SetLanguageCompleted;
        
        /// <remarks/>
        public event InitiateSessionWithLangCompletedEventHandler InitiateSessionWithLangCompleted;
        
        /// <remarks/>
        public event UserExistsCompletedEventHandler UserExistsCompleted;
        
        /// <remarks/>
        public event LoginExistsCompletedEventHandler LoginExistsCompleted;
        
        /// <remarks/>
        public event RegisterUserCompletedEventHandler RegisterUserCompleted;
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event SetUserInfoCompletedEventHandler SetUserInfoCompleted;
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event RegisterMachineCompletedEventHandler RegisterMachineCompleted;
        
        /// <remarks/>
        public event UnregisterMachineCompletedEventHandler UnregisterMachineCompleted;
        
        /// <remarks/>
        public event ListMachinesCompletedEventHandler ListMachinesCompleted;
        
        /// <remarks/>
        public event AddRecordingCompletedEventHandler AddRecordingCompleted;
        
        /// <remarks/>
        public event UpdateRecordingCompletedEventHandler UpdateRecordingCompleted;
        
        /// <remarks/>
        public event DeleteRecordingCompletedEventHandler DeleteRecordingCompleted;
        
        /// <remarks/>
        public event ListRecordingsCompletedEventHandler ListRecordingsCompleted;
        
        /// <remarks/>
        public event AddRecordingByPortIdCompletedEventHandler AddRecordingByPortIdCompleted;
        
        /// <remarks/>
        public event DeleteRecordingByPortIdCompletedEventHandler DeleteRecordingByPortIdCompleted;
        
        /// <remarks/>
        public event ListRecordingsByPortIdCompletedEventHandler ListRecordingsByPortIdCompleted;
        
        /// <remarks/>
        public event GetAppVersionCompletedEventHandler GetAppVersionCompleted;
        
        /// <remarks/>
        public event VersionCheckCompletedEventHandler VersionCheckCompleted;
        
        /// <remarks/>
        public event BeginUpdateCompletedEventHandler BeginUpdateCompleted;
        
        /// <remarks/>
        public event EndUpdateCompletedEventHandler EndUpdateCompleted;
        
        /// <remarks/>
        public event GetTuneRequestPackagesCompletedEventHandler GetTuneRequestPackagesCompleted;
        
        /// <remarks/>
        public event GetTuneRequestPackagesForRegionCompletedEventHandler GetTuneRequestPackagesForRegionCompleted;
        
        /// <remarks/>
        public event GetChannelsCompletedEventHandler GetChannelsCompleted;
        
        /// <remarks/>
        public event GetChannelRankCompletedEventHandler GetChannelRankCompleted;
        
        /// <remarks/>
        public event SetUnknownChannelsCompletedEventHandler SetUnknownChannelsCompleted;
        
        /// <remarks/>
        public event GetMovieRankCompletedEventHandler GetMovieRankCompleted;
        
        /// <remarks/>
        public event GetProgramsCompletedEventHandler GetProgramsCompleted;
        
        /// <remarks/>
        public event GetEpisodesCompletedEventHandler GetEpisodesCompleted;
        
        /// <remarks/>
        public event GetMoviesCompletedEventHandler GetMoviesCompleted;
        
        /// <remarks/>
        public event GetCastCompletedEventHandler GetCastCompleted;
        
        /// <remarks/>
        public event GetMovieTypesCompletedEventHandler GetMovieTypesCompleted;
        
        /// <remarks/>
        public event GetDVBCategoryCompletedEventHandler GetDVBCategoryCompleted;
        
        /// <remarks/>
        public event GetRelatedProgramsCompletedEventHandler GetRelatedProgramsCompleted;
        
        /// <remarks/>
        public event GetEPGCompletedEventHandler GetEPGCompleted;
        
        /// <remarks/>
        public event GetEPGLocationCompletedEventHandler GetEPGLocationCompleted;
        
        /// <remarks/>
        public event GetNowCompletedEventHandler GetNowCompleted;
        
        /// <remarks/>
        public event SearchMovieCompletedEventHandler SearchMovieCompleted;
        
        /// <remarks/>
        public event GetGuideCompletedEventHandler GetGuideCompleted;
        
        /// <remarks/>
        public event GetGuideProgramCompletedEventHandler GetGuideProgramCompleted;
        
        /// <remarks/>
        public event GetGuideProgramRecStatCompletedEventHandler GetGuideProgramRecStatCompleted;
        
        /// <remarks/>
        public event GetGuideMovieRecStatCompletedEventHandler GetGuideMovieRecStatCompleted;
        
        /// <remarks/>
        public event SendTvStatCompletedEventHandler SendTvStatCompleted;
        
        /// <remarks/>
        public event GetTvStatByPortIdCompletedEventHandler GetTvStatByPortIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#InitiateSession", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string InitiateSession(string username, string password) {
            object[] results = this.Invoke("InitiateSession", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInitiateSession(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InitiateSession", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndInitiateSession(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitiateSessionAsync(string username, string password) {
            this.InitiateSessionAsync(username, password, null);
        }
        
        /// <remarks/>
        public void InitiateSessionAsync(string username, string password, object userState) {
            if ((this.InitiateSessionOperationCompleted == null)) {
                this.InitiateSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateSessionOperationCompleted);
            }
            this.InvokeAsync("InitiateSession", new object[] {
                        username,
                        password}, this.InitiateSessionOperationCompleted, userState);
        }
        
        private void OnInitiateSessionOperationCompleted(object arg) {
            if ((this.InitiateSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateSessionCompleted(this, new InitiateSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#SetLanguage", RequestNamespace="http://homesyslite.timbuktu.hu/", OneWay=true)]
        public void SetLanguage(string sessionId, string lang) {
            this.Invoke("SetLanguage", new object[] {
                        sessionId,
                        lang});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetLanguage(string sessionId, string lang, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetLanguage", new object[] {
                        sessionId,
                        lang}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetLanguage(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetLanguageAsync(string sessionId, string lang) {
            this.SetLanguageAsync(sessionId, lang, null);
        }
        
        /// <remarks/>
        public void SetLanguageAsync(string sessionId, string lang, object userState) {
            if ((this.SetLanguageOperationCompleted == null)) {
                this.SetLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLanguageOperationCompleted);
            }
            this.InvokeAsync("SetLanguage", new object[] {
                        sessionId,
                        lang}, this.SetLanguageOperationCompleted, userState);
        }
        
        private void OnSetLanguageOperationCompleted(object arg) {
            if ((this.SetLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLanguageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#InitiateSessionWithLang", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string InitiateSessionWithLang(string username, string password, string lang) {
            object[] results = this.Invoke("InitiateSessionWithLang", new object[] {
                        username,
                        password,
                        lang});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInitiateSessionWithLang(string username, string password, string lang, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InitiateSessionWithLang", new object[] {
                        username,
                        password,
                        lang}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndInitiateSessionWithLang(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitiateSessionWithLangAsync(string username, string password, string lang) {
            this.InitiateSessionWithLangAsync(username, password, lang, null);
        }
        
        /// <remarks/>
        public void InitiateSessionWithLangAsync(string username, string password, string lang, object userState) {
            if ((this.InitiateSessionWithLangOperationCompleted == null)) {
                this.InitiateSessionWithLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateSessionWithLangOperationCompleted);
            }
            this.InvokeAsync("InitiateSessionWithLang", new object[] {
                        username,
                        password,
                        lang}, this.InitiateSessionWithLangOperationCompleted, userState);
        }
        
        private void OnInitiateSessionWithLangOperationCompleted(object arg) {
            if ((this.InitiateSessionWithLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateSessionWithLangCompleted(this, new InitiateSessionWithLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#UserExists", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool UserExists(string username) {
            object[] results = this.Invoke("UserExists", new object[] {
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUserExists(string username, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UserExists", new object[] {
                        username}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUserExists(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserExistsAsync(string username) {
            this.UserExistsAsync(username, null);
        }
        
        /// <remarks/>
        public void UserExistsAsync(string username, object userState) {
            if ((this.UserExistsOperationCompleted == null)) {
                this.UserExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserExistsOperationCompleted);
            }
            this.InvokeAsync("UserExists", new object[] {
                        username}, this.UserExistsOperationCompleted, userState);
        }
        
        private void OnUserExistsOperationCompleted(object arg) {
            if ((this.UserExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserExistsCompleted(this, new UserExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#LoginExists", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool LoginExists(string username, string password) {
            object[] results = this.Invoke("LoginExists", new object[] {
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoginExists(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoginExists", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndLoginExists(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginExistsAsync(string username, string password) {
            this.LoginExistsAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LoginExistsAsync(string username, string password, object userState) {
            if ((this.LoginExistsOperationCompleted == null)) {
                this.LoginExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginExistsOperationCompleted);
            }
            this.InvokeAsync("LoginExists", new object[] {
                        username,
                        password}, this.LoginExistsOperationCompleted, userState);
        }
        
        private void OnLoginExistsOperationCompleted(object arg) {
            if ((this.LoginExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginExistsCompleted(this, new LoginExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#RegisterUser", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string RegisterUser(string username, string password, string email) {
            object[] results = this.Invoke("RegisterUser", new object[] {
                        username,
                        password,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegisterUser(string username, string password, string email, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RegisterUser", new object[] {
                        username,
                        password,
                        email}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRegisterUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string username, string password, string email) {
            this.RegisterUserAsync(username, password, email, null);
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string username, string password, string email, object userState) {
            if ((this.RegisterUserOperationCompleted == null)) {
                this.RegisterUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterUserOperationCompleted);
            }
            this.InvokeAsync("RegisterUser", new object[] {
                        username,
                        password,
                        email}, this.RegisterUserOperationCompleted, userState);
        }
        
        private void OnRegisterUserOperationCompleted(object arg) {
            if ((this.RegisterUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterUserCompleted(this, new RegisterUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#Register", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Register(string sessionId, string username, string password, string email) {
            object[] results = this.Invoke("Register", new object[] {
                        sessionId,
                        username,
                        password,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegister(string sessionId, string username, string password, string email, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Register", new object[] {
                        sessionId,
                        username,
                        password,
                        email}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRegister(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(string sessionId, string username, string password, string email) {
            this.RegisterAsync(sessionId, username, password, email, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string sessionId, string username, string password, string email, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        sessionId,
                        username,
                        password,
                        email}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#SetUserInfo", RequestNamespace="http://homesyslite.timbuktu.hu/", OneWay=true)]
        public void SetUserInfo(string sessionId, UserInfo userInfo) {
            this.Invoke("SetUserInfo", new object[] {
                        sessionId,
                        userInfo});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetUserInfo(string sessionId, UserInfo userInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetUserInfo", new object[] {
                        sessionId,
                        userInfo}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetUserInfo(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetUserInfoAsync(string sessionId, UserInfo userInfo) {
            this.SetUserInfoAsync(sessionId, userInfo, null);
        }
        
        /// <remarks/>
        public void SetUserInfoAsync(string sessionId, UserInfo userInfo, object userState) {
            if ((this.SetUserInfoOperationCompleted == null)) {
                this.SetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserInfoOperationCompleted);
            }
            this.InvokeAsync("SetUserInfo", new object[] {
                        sessionId,
                        userInfo}, this.SetUserInfoOperationCompleted, userState);
        }
        
        private void OnSetUserInfoOperationCompleted(object arg) {
            if ((this.SetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetUserInfo", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public UserInfo GetUserInfo(string sessionId) {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        sessionId});
            return ((UserInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserInfo(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserInfo", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserInfo EndGetUserInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string sessionId) {
            this.GetUserInfoAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string sessionId, object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        sessionId}, this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#RegisterMachine", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public MachineRegistrationData RegisterMachine(string sessionId, string machineName, TunerData[] tunerDataList) {
            object[] results = this.Invoke("RegisterMachine", new object[] {
                        sessionId,
                        machineName,
                        tunerDataList});
            return ((MachineRegistrationData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegisterMachine(string sessionId, string machineName, TunerData[] tunerDataList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RegisterMachine", new object[] {
                        sessionId,
                        machineName,
                        tunerDataList}, callback, asyncState);
        }
        
        /// <remarks/>
        public MachineRegistrationData EndRegisterMachine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MachineRegistrationData)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterMachineAsync(string sessionId, string machineName, TunerData[] tunerDataList) {
            this.RegisterMachineAsync(sessionId, machineName, tunerDataList, null);
        }
        
        /// <remarks/>
        public void RegisterMachineAsync(string sessionId, string machineName, TunerData[] tunerDataList, object userState) {
            if ((this.RegisterMachineOperationCompleted == null)) {
                this.RegisterMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterMachineOperationCompleted);
            }
            this.InvokeAsync("RegisterMachine", new object[] {
                        sessionId,
                        machineName,
                        tunerDataList}, this.RegisterMachineOperationCompleted, userState);
        }
        
        private void OnRegisterMachineOperationCompleted(object arg) {
            if ((this.RegisterMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterMachineCompleted(this, new RegisterMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#UnregisterMachine", RequestNamespace="http://homesyslite.timbuktu.hu/", OneWay=true)]
        public void UnregisterMachine(string sessionId, System.Guid machineId) {
            this.Invoke("UnregisterMachine", new object[] {
                        sessionId,
                        machineId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnregisterMachine(string sessionId, System.Guid machineId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnregisterMachine", new object[] {
                        sessionId,
                        machineId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUnregisterMachine(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UnregisterMachineAsync(string sessionId, System.Guid machineId) {
            this.UnregisterMachineAsync(sessionId, machineId, null);
        }
        
        /// <remarks/>
        public void UnregisterMachineAsync(string sessionId, System.Guid machineId, object userState) {
            if ((this.UnregisterMachineOperationCompleted == null)) {
                this.UnregisterMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnregisterMachineOperationCompleted);
            }
            this.InvokeAsync("UnregisterMachine", new object[] {
                        sessionId,
                        machineId}, this.UnregisterMachineOperationCompleted, userState);
        }
        
        private void OnUnregisterMachineOperationCompleted(object arg) {
            if ((this.UnregisterMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnregisterMachineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#ListMachines", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public Machine[] ListMachines(string sessionId) {
            object[] results = this.Invoke("ListMachines", new object[] {
                        sessionId});
            return ((Machine[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListMachines(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListMachines", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public Machine[] EndListMachines(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Machine[])(results[0]));
        }
        
        /// <remarks/>
        public void ListMachinesAsync(string sessionId) {
            this.ListMachinesAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void ListMachinesAsync(string sessionId, object userState) {
            if ((this.ListMachinesOperationCompleted == null)) {
                this.ListMachinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMachinesOperationCompleted);
            }
            this.InvokeAsync("ListMachines", new object[] {
                        sessionId}, this.ListMachinesOperationCompleted, userState);
        }
        
        private void OnListMachinesOperationCompleted(object arg) {
            if ((this.ListMachinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMachinesCompleted(this, new ListMachinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#AddRecording", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int AddRecording(string sessionId, System.Guid machineId, int programId) {
            object[] results = this.Invoke("AddRecording", new object[] {
                        sessionId,
                        machineId,
                        programId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddRecording(string sessionId, System.Guid machineId, int programId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddRecording", new object[] {
                        sessionId,
                        machineId,
                        programId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddRecording(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddRecordingAsync(string sessionId, System.Guid machineId, int programId) {
            this.AddRecordingAsync(sessionId, machineId, programId, null);
        }
        
        /// <remarks/>
        public void AddRecordingAsync(string sessionId, System.Guid machineId, int programId, object userState) {
            if ((this.AddRecordingOperationCompleted == null)) {
                this.AddRecordingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRecordingOperationCompleted);
            }
            this.InvokeAsync("AddRecording", new object[] {
                        sessionId,
                        machineId,
                        programId}, this.AddRecordingOperationCompleted, userState);
        }
        
        private void OnAddRecordingOperationCompleted(object arg) {
            if ((this.AddRecordingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRecordingCompleted(this, new AddRecordingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#UpdateRecording", RequestNamespace="http://homesyslite.timbuktu.hu/", OneWay=true)]
        public void UpdateRecording(string sessionId, int recordingId, string recordingState) {
            this.Invoke("UpdateRecording", new object[] {
                        sessionId,
                        recordingId,
                        recordingState});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateRecording(string sessionId, int recordingId, string recordingState, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateRecording", new object[] {
                        sessionId,
                        recordingId,
                        recordingState}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateRecording(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateRecordingAsync(string sessionId, int recordingId, string recordingState) {
            this.UpdateRecordingAsync(sessionId, recordingId, recordingState, null);
        }
        
        /// <remarks/>
        public void UpdateRecordingAsync(string sessionId, int recordingId, string recordingState, object userState) {
            if ((this.UpdateRecordingOperationCompleted == null)) {
                this.UpdateRecordingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRecordingOperationCompleted);
            }
            this.InvokeAsync("UpdateRecording", new object[] {
                        sessionId,
                        recordingId,
                        recordingState}, this.UpdateRecordingOperationCompleted, userState);
        }
        
        private void OnUpdateRecordingOperationCompleted(object arg) {
            if ((this.UpdateRecordingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRecordingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#DeleteRecording", RequestNamespace="http://homesyslite.timbuktu.hu/", OneWay=true)]
        public void DeleteRecording(string sessionId, int recordingId) {
            this.Invoke("DeleteRecording", new object[] {
                        sessionId,
                        recordingId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteRecording(string sessionId, int recordingId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteRecording", new object[] {
                        sessionId,
                        recordingId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteRecording(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteRecordingAsync(string sessionId, int recordingId) {
            this.DeleteRecordingAsync(sessionId, recordingId, null);
        }
        
        /// <remarks/>
        public void DeleteRecordingAsync(string sessionId, int recordingId, object userState) {
            if ((this.DeleteRecordingOperationCompleted == null)) {
                this.DeleteRecordingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRecordingOperationCompleted);
            }
            this.InvokeAsync("DeleteRecording", new object[] {
                        sessionId,
                        recordingId}, this.DeleteRecordingOperationCompleted, userState);
        }
        
        private void OnDeleteRecordingOperationCompleted(object arg) {
            if ((this.DeleteRecordingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRecordingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#ListRecordings", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public Recording[] ListRecordings(string sessionId, bool futureOnly) {
            object[] results = this.Invoke("ListRecordings", new object[] {
                        sessionId,
                        futureOnly});
            return ((Recording[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListRecordings(string sessionId, bool futureOnly, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListRecordings", new object[] {
                        sessionId,
                        futureOnly}, callback, asyncState);
        }
        
        /// <remarks/>
        public Recording[] EndListRecordings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Recording[])(results[0]));
        }
        
        /// <remarks/>
        public void ListRecordingsAsync(string sessionId, bool futureOnly) {
            this.ListRecordingsAsync(sessionId, futureOnly, null);
        }
        
        /// <remarks/>
        public void ListRecordingsAsync(string sessionId, bool futureOnly, object userState) {
            if ((this.ListRecordingsOperationCompleted == null)) {
                this.ListRecordingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRecordingsOperationCompleted);
            }
            this.InvokeAsync("ListRecordings", new object[] {
                        sessionId,
                        futureOnly}, this.ListRecordingsOperationCompleted, userState);
        }
        
        private void OnListRecordingsOperationCompleted(object arg) {
            if ((this.ListRecordingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRecordingsCompleted(this, new ListRecordingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#AddRecordingByPortId", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int AddRecordingByPortId(string sessionId, int programId) {
            object[] results = this.Invoke("AddRecordingByPortId", new object[] {
                        sessionId,
                        programId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddRecordingByPortId(string sessionId, int programId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddRecordingByPortId", new object[] {
                        sessionId,
                        programId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddRecordingByPortId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddRecordingByPortIdAsync(string sessionId, int programId) {
            this.AddRecordingByPortIdAsync(sessionId, programId, null);
        }
        
        /// <remarks/>
        public void AddRecordingByPortIdAsync(string sessionId, int programId, object userState) {
            if ((this.AddRecordingByPortIdOperationCompleted == null)) {
                this.AddRecordingByPortIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRecordingByPortIdOperationCompleted);
            }
            this.InvokeAsync("AddRecordingByPortId", new object[] {
                        sessionId,
                        programId}, this.AddRecordingByPortIdOperationCompleted, userState);
        }
        
        private void OnAddRecordingByPortIdOperationCompleted(object arg) {
            if ((this.AddRecordingByPortIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRecordingByPortIdCompleted(this, new AddRecordingByPortIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#DeleteRecordingByPortId", RequestNamespace="http://homesyslite.timbuktu.hu/", OneWay=true)]
        public void DeleteRecordingByPortId(string sessionId, int programId) {
            this.Invoke("DeleteRecordingByPortId", new object[] {
                        sessionId,
                        programId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteRecordingByPortId(string sessionId, int programId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteRecordingByPortId", new object[] {
                        sessionId,
                        programId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteRecordingByPortId(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteRecordingByPortIdAsync(string sessionId, int programId) {
            this.DeleteRecordingByPortIdAsync(sessionId, programId, null);
        }
        
        /// <remarks/>
        public void DeleteRecordingByPortIdAsync(string sessionId, int programId, object userState) {
            if ((this.DeleteRecordingByPortIdOperationCompleted == null)) {
                this.DeleteRecordingByPortIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRecordingByPortIdOperationCompleted);
            }
            this.InvokeAsync("DeleteRecordingByPortId", new object[] {
                        sessionId,
                        programId}, this.DeleteRecordingByPortIdOperationCompleted, userState);
        }
        
        private void OnDeleteRecordingByPortIdOperationCompleted(object arg) {
            if ((this.DeleteRecordingByPortIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRecordingByPortIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#ListRecordingsByPortId", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public Recording[] ListRecordingsByPortId(string sessionId, bool futureOnly) {
            object[] results = this.Invoke("ListRecordingsByPortId", new object[] {
                        sessionId,
                        futureOnly});
            return ((Recording[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListRecordingsByPortId(string sessionId, bool futureOnly, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListRecordingsByPortId", new object[] {
                        sessionId,
                        futureOnly}, callback, asyncState);
        }
        
        /// <remarks/>
        public Recording[] EndListRecordingsByPortId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Recording[])(results[0]));
        }
        
        /// <remarks/>
        public void ListRecordingsByPortIdAsync(string sessionId, bool futureOnly) {
            this.ListRecordingsByPortIdAsync(sessionId, futureOnly, null);
        }
        
        /// <remarks/>
        public void ListRecordingsByPortIdAsync(string sessionId, bool futureOnly, object userState) {
            if ((this.ListRecordingsByPortIdOperationCompleted == null)) {
                this.ListRecordingsByPortIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRecordingsByPortIdOperationCompleted);
            }
            this.InvokeAsync("ListRecordingsByPortId", new object[] {
                        sessionId,
                        futureOnly}, this.ListRecordingsByPortIdOperationCompleted, userState);
        }
        
        private void OnListRecordingsByPortIdOperationCompleted(object arg) {
            if ((this.ListRecordingsByPortIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRecordingsByPortIdCompleted(this, new ListRecordingsByPortIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetAppVersion", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AppVersion GetAppVersion(string name, string version) {
            object[] results = this.Invoke("GetAppVersion", new object[] {
                        name,
                        version});
            return ((AppVersion)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAppVersion(string name, string version, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAppVersion", new object[] {
                        name,
                        version}, callback, asyncState);
        }
        
        /// <remarks/>
        public AppVersion EndGetAppVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AppVersion)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppVersionAsync(string name, string version) {
            this.GetAppVersionAsync(name, version, null);
        }
        
        /// <remarks/>
        public void GetAppVersionAsync(string name, string version, object userState) {
            if ((this.GetAppVersionOperationCompleted == null)) {
                this.GetAppVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppVersionOperationCompleted);
            }
            this.InvokeAsync("GetAppVersion", new object[] {
                        name,
                        version}, this.GetAppVersionOperationCompleted, userState);
        }
        
        private void OnGetAppVersionOperationCompleted(object arg) {
            if ((this.GetAppVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppVersionCompleted(this, new GetAppVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#VersionCheck", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string VersionCheck() {
            object[] results = this.Invoke("VersionCheck", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginVersionCheck(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("VersionCheck", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndVersionCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VersionCheckAsync() {
            this.VersionCheckAsync(null);
        }
        
        /// <remarks/>
        public void VersionCheckAsync(object userState) {
            if ((this.VersionCheckOperationCompleted == null)) {
                this.VersionCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVersionCheckOperationCompleted);
            }
            this.InvokeAsync("VersionCheck", new object[0], this.VersionCheckOperationCompleted, userState);
        }
        
        private void OnVersionCheckOperationCompleted(object arg) {
            if ((this.VersionCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VersionCheckCompleted(this, new VersionCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#BeginUpdate", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public System.DateTime BeginUpdate(string sessionId) {
            object[] results = this.Invoke("BeginUpdate", new object[] {
                        sessionId});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBeginUpdate(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BeginUpdate", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndBeginUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void BeginUpdateAsync(string sessionId) {
            this.BeginUpdateAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void BeginUpdateAsync(string sessionId, object userState) {
            if ((this.BeginUpdateOperationCompleted == null)) {
                this.BeginUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginUpdateOperationCompleted);
            }
            this.InvokeAsync("BeginUpdate", new object[] {
                        sessionId}, this.BeginUpdateOperationCompleted, userState);
        }
        
        private void OnBeginUpdateOperationCompleted(object arg) {
            if ((this.BeginUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginUpdateCompleted(this, new BeginUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#EndUpdate", RequestNamespace="http://homesyslite.timbuktu.hu/", OneWay=true)]
        public void EndUpdate(string sessionId) {
            this.Invoke("EndUpdate", new object[] {
                        sessionId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEndUpdate(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EndUpdate", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEndUpdate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void EndUpdateAsync(string sessionId) {
            this.EndUpdateAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void EndUpdateAsync(string sessionId, object userState) {
            if ((this.EndUpdateOperationCompleted == null)) {
                this.EndUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndUpdateOperationCompleted);
            }
            this.InvokeAsync("EndUpdate", new object[] {
                        sessionId}, this.EndUpdateOperationCompleted, userState);
        }
        
        private void OnEndUpdateOperationCompleted(object arg) {
            if ((this.EndUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetTuneRequestPackages", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TuneRequestPackage[] GetTuneRequestPackages(string sessionId, System.DateTime timestamp) {
            object[] results = this.Invoke("GetTuneRequestPackages", new object[] {
                        sessionId,
                        timestamp});
            return ((TuneRequestPackage[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTuneRequestPackages(string sessionId, System.DateTime timestamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTuneRequestPackages", new object[] {
                        sessionId,
                        timestamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public TuneRequestPackage[] EndGetTuneRequestPackages(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TuneRequestPackage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTuneRequestPackagesAsync(string sessionId, System.DateTime timestamp) {
            this.GetTuneRequestPackagesAsync(sessionId, timestamp, null);
        }
        
        /// <remarks/>
        public void GetTuneRequestPackagesAsync(string sessionId, System.DateTime timestamp, object userState) {
            if ((this.GetTuneRequestPackagesOperationCompleted == null)) {
                this.GetTuneRequestPackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTuneRequestPackagesOperationCompleted);
            }
            this.InvokeAsync("GetTuneRequestPackages", new object[] {
                        sessionId,
                        timestamp}, this.GetTuneRequestPackagesOperationCompleted, userState);
        }
        
        private void OnGetTuneRequestPackagesOperationCompleted(object arg) {
            if ((this.GetTuneRequestPackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTuneRequestPackagesCompleted(this, new GetTuneRequestPackagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetTuneRequestPackagesForRegion", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TuneRequestPackage[] GetTuneRequestPackagesForRegion(string sessionId, string region, System.DateTime timestamp) {
            object[] results = this.Invoke("GetTuneRequestPackagesForRegion", new object[] {
                        sessionId,
                        region,
                        timestamp});
            return ((TuneRequestPackage[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTuneRequestPackagesForRegion(string sessionId, string region, System.DateTime timestamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTuneRequestPackagesForRegion", new object[] {
                        sessionId,
                        region,
                        timestamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public TuneRequestPackage[] EndGetTuneRequestPackagesForRegion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TuneRequestPackage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTuneRequestPackagesForRegionAsync(string sessionId, string region, System.DateTime timestamp) {
            this.GetTuneRequestPackagesForRegionAsync(sessionId, region, timestamp, null);
        }
        
        /// <remarks/>
        public void GetTuneRequestPackagesForRegionAsync(string sessionId, string region, System.DateTime timestamp, object userState) {
            if ((this.GetTuneRequestPackagesForRegionOperationCompleted == null)) {
                this.GetTuneRequestPackagesForRegionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTuneRequestPackagesForRegionOperationCompleted);
            }
            this.InvokeAsync("GetTuneRequestPackagesForRegion", new object[] {
                        sessionId,
                        region,
                        timestamp}, this.GetTuneRequestPackagesForRegionOperationCompleted, userState);
        }
        
        private void OnGetTuneRequestPackagesForRegionOperationCompleted(object arg) {
            if ((this.GetTuneRequestPackagesForRegionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTuneRequestPackagesForRegionCompleted(this, new GetTuneRequestPackagesForRegionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetChannels", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public Channel[] GetChannels(string sessionId, System.DateTime timestamp) {
            object[] results = this.Invoke("GetChannels", new object[] {
                        sessionId,
                        timestamp});
            return ((Channel[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChannels(string sessionId, System.DateTime timestamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChannels", new object[] {
                        sessionId,
                        timestamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public Channel[] EndGetChannels(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Channel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelsAsync(string sessionId, System.DateTime timestamp) {
            this.GetChannelsAsync(sessionId, timestamp, null);
        }
        
        /// <remarks/>
        public void GetChannelsAsync(string sessionId, System.DateTime timestamp, object userState) {
            if ((this.GetChannelsOperationCompleted == null)) {
                this.GetChannelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelsOperationCompleted);
            }
            this.InvokeAsync("GetChannels", new object[] {
                        sessionId,
                        timestamp}, this.GetChannelsOperationCompleted, userState);
        }
        
        private void OnGetChannelsOperationCompleted(object arg) {
            if ((this.GetChannelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelsCompleted(this, new GetChannelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetChannelRank", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int[] GetChannelRank(string sessionId) {
            object[] results = this.Invoke("GetChannelRank", new object[] {
                        sessionId});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChannelRank(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChannelRank", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndGetChannelRank(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelRankAsync(string sessionId) {
            this.GetChannelRankAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void GetChannelRankAsync(string sessionId, object userState) {
            if ((this.GetChannelRankOperationCompleted == null)) {
                this.GetChannelRankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelRankOperationCompleted);
            }
            this.InvokeAsync("GetChannelRank", new object[] {
                        sessionId}, this.GetChannelRankOperationCompleted, userState);
        }
        
        private void OnGetChannelRankOperationCompleted(object arg) {
            if ((this.GetChannelRankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelRankCompleted(this, new GetChannelRankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#SetUnknownChannels", RequestNamespace="http://homesyslite.timbuktu.hu/", OneWay=true)]
        public void SetUnknownChannels(string sessionId, string regionId, string[] names) {
            this.Invoke("SetUnknownChannels", new object[] {
                        sessionId,
                        regionId,
                        names});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetUnknownChannels(string sessionId, string regionId, string[] names, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetUnknownChannels", new object[] {
                        sessionId,
                        regionId,
                        names}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetUnknownChannels(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetUnknownChannelsAsync(string sessionId, string regionId, string[] names) {
            this.SetUnknownChannelsAsync(sessionId, regionId, names, null);
        }
        
        /// <remarks/>
        public void SetUnknownChannelsAsync(string sessionId, string regionId, string[] names, object userState) {
            if ((this.SetUnknownChannelsOperationCompleted == null)) {
                this.SetUnknownChannelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUnknownChannelsOperationCompleted);
            }
            this.InvokeAsync("SetUnknownChannels", new object[] {
                        sessionId,
                        regionId,
                        names}, this.SetUnknownChannelsOperationCompleted, userState);
        }
        
        private void OnSetUnknownChannelsOperationCompleted(object arg) {
            if ((this.SetUnknownChannelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUnknownChannelsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetMovieRank", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int[] GetMovieRank(string sessionId) {
            object[] results = this.Invoke("GetMovieRank", new object[] {
                        sessionId});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMovieRank(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMovieRank", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndGetMovieRank(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMovieRankAsync(string sessionId) {
            this.GetMovieRankAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void GetMovieRankAsync(string sessionId, object userState) {
            if ((this.GetMovieRankOperationCompleted == null)) {
                this.GetMovieRankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMovieRankOperationCompleted);
            }
            this.InvokeAsync("GetMovieRank", new object[] {
                        sessionId}, this.GetMovieRankOperationCompleted, userState);
        }
        
        private void OnGetMovieRankOperationCompleted(object arg) {
            if ((this.GetMovieRankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMovieRankCompleted(this, new GetMovieRankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetPrograms", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public Program[] GetPrograms(string sessionId, System.DateTime timestamp) {
            object[] results = this.Invoke("GetPrograms", new object[] {
                        sessionId,
                        timestamp});
            return ((Program[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPrograms(string sessionId, System.DateTime timestamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPrograms", new object[] {
                        sessionId,
                        timestamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public Program[] EndGetPrograms(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Program[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramsAsync(string sessionId, System.DateTime timestamp) {
            this.GetProgramsAsync(sessionId, timestamp, null);
        }
        
        /// <remarks/>
        public void GetProgramsAsync(string sessionId, System.DateTime timestamp, object userState) {
            if ((this.GetProgramsOperationCompleted == null)) {
                this.GetProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramsOperationCompleted);
            }
            this.InvokeAsync("GetPrograms", new object[] {
                        sessionId,
                        timestamp}, this.GetProgramsOperationCompleted, userState);
        }
        
        private void OnGetProgramsOperationCompleted(object arg) {
            if ((this.GetProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramsCompleted(this, new GetProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetEpisodes", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public Episode[] GetEpisodes(string sessionId, System.DateTime timestamp) {
            object[] results = this.Invoke("GetEpisodes", new object[] {
                        sessionId,
                        timestamp});
            return ((Episode[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEpisodes(string sessionId, System.DateTime timestamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEpisodes", new object[] {
                        sessionId,
                        timestamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public Episode[] EndGetEpisodes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Episode[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEpisodesAsync(string sessionId, System.DateTime timestamp) {
            this.GetEpisodesAsync(sessionId, timestamp, null);
        }
        
        /// <remarks/>
        public void GetEpisodesAsync(string sessionId, System.DateTime timestamp, object userState) {
            if ((this.GetEpisodesOperationCompleted == null)) {
                this.GetEpisodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEpisodesOperationCompleted);
            }
            this.InvokeAsync("GetEpisodes", new object[] {
                        sessionId,
                        timestamp}, this.GetEpisodesOperationCompleted, userState);
        }
        
        private void OnGetEpisodesOperationCompleted(object arg) {
            if ((this.GetEpisodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEpisodesCompleted(this, new GetEpisodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetMovies", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public Movie[] GetMovies(string sessionId, System.DateTime timestamp) {
            object[] results = this.Invoke("GetMovies", new object[] {
                        sessionId,
                        timestamp});
            return ((Movie[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMovies(string sessionId, System.DateTime timestamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMovies", new object[] {
                        sessionId,
                        timestamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public Movie[] EndGetMovies(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Movie[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMoviesAsync(string sessionId, System.DateTime timestamp) {
            this.GetMoviesAsync(sessionId, timestamp, null);
        }
        
        /// <remarks/>
        public void GetMoviesAsync(string sessionId, System.DateTime timestamp, object userState) {
            if ((this.GetMoviesOperationCompleted == null)) {
                this.GetMoviesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMoviesOperationCompleted);
            }
            this.InvokeAsync("GetMovies", new object[] {
                        sessionId,
                        timestamp}, this.GetMoviesOperationCompleted, userState);
        }
        
        private void OnGetMoviesOperationCompleted(object arg) {
            if ((this.GetMoviesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMoviesCompleted(this, new GetMoviesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetCast", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public Cast[] GetCast(string sessionId, System.DateTime timestamp) {
            object[] results = this.Invoke("GetCast", new object[] {
                        sessionId,
                        timestamp});
            return ((Cast[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCast(string sessionId, System.DateTime timestamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCast", new object[] {
                        sessionId,
                        timestamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public Cast[] EndGetCast(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Cast[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCastAsync(string sessionId, System.DateTime timestamp) {
            this.GetCastAsync(sessionId, timestamp, null);
        }
        
        /// <remarks/>
        public void GetCastAsync(string sessionId, System.DateTime timestamp, object userState) {
            if ((this.GetCastOperationCompleted == null)) {
                this.GetCastOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCastOperationCompleted);
            }
            this.InvokeAsync("GetCast", new object[] {
                        sessionId,
                        timestamp}, this.GetCastOperationCompleted, userState);
        }
        
        private void OnGetCastOperationCompleted(object arg) {
            if ((this.GetCastCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCastCompleted(this, new GetCastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetMovieTypes", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public MovieType[] GetMovieTypes(string sessionId, System.DateTime timestamp) {
            object[] results = this.Invoke("GetMovieTypes", new object[] {
                        sessionId,
                        timestamp});
            return ((MovieType[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMovieTypes(string sessionId, System.DateTime timestamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMovieTypes", new object[] {
                        sessionId,
                        timestamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public MovieType[] EndGetMovieTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MovieType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMovieTypesAsync(string sessionId, System.DateTime timestamp) {
            this.GetMovieTypesAsync(sessionId, timestamp, null);
        }
        
        /// <remarks/>
        public void GetMovieTypesAsync(string sessionId, System.DateTime timestamp, object userState) {
            if ((this.GetMovieTypesOperationCompleted == null)) {
                this.GetMovieTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMovieTypesOperationCompleted);
            }
            this.InvokeAsync("GetMovieTypes", new object[] {
                        sessionId,
                        timestamp}, this.GetMovieTypesOperationCompleted, userState);
        }
        
        private void OnGetMovieTypesOperationCompleted(object arg) {
            if ((this.GetMovieTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMovieTypesCompleted(this, new GetMovieTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetDVBCategory", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public DVBCategory[] GetDVBCategory(string sessionId, System.DateTime timestamp) {
            object[] results = this.Invoke("GetDVBCategory", new object[] {
                        sessionId,
                        timestamp});
            return ((DVBCategory[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDVBCategory(string sessionId, System.DateTime timestamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDVBCategory", new object[] {
                        sessionId,
                        timestamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public DVBCategory[] EndGetDVBCategory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DVBCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDVBCategoryAsync(string sessionId, System.DateTime timestamp) {
            this.GetDVBCategoryAsync(sessionId, timestamp, null);
        }
        
        /// <remarks/>
        public void GetDVBCategoryAsync(string sessionId, System.DateTime timestamp, object userState) {
            if ((this.GetDVBCategoryOperationCompleted == null)) {
                this.GetDVBCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDVBCategoryOperationCompleted);
            }
            this.InvokeAsync("GetDVBCategory", new object[] {
                        sessionId,
                        timestamp}, this.GetDVBCategoryOperationCompleted, userState);
        }
        
        private void OnGetDVBCategoryOperationCompleted(object arg) {
            if ((this.GetDVBCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDVBCategoryCompleted(this, new GetDVBCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetRelatedPrograms", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public RelatedProgram[] GetRelatedPrograms(string sessionId) {
            object[] results = this.Invoke("GetRelatedPrograms", new object[] {
                        sessionId});
            return ((RelatedProgram[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRelatedPrograms(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRelatedPrograms", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public RelatedProgram[] EndGetRelatedPrograms(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RelatedProgram[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRelatedProgramsAsync(string sessionId) {
            this.GetRelatedProgramsAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void GetRelatedProgramsAsync(string sessionId, object userState) {
            if ((this.GetRelatedProgramsOperationCompleted == null)) {
                this.GetRelatedProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelatedProgramsOperationCompleted);
            }
            this.InvokeAsync("GetRelatedPrograms", new object[] {
                        sessionId}, this.GetRelatedProgramsOperationCompleted, userState);
        }
        
        private void OnGetRelatedProgramsOperationCompleted(object arg) {
            if ((this.GetRelatedProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelatedProgramsCompleted(this, new GetRelatedProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetEPG", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public EPG GetEPG(string sessionId, System.DateTime timestamp) {
            object[] results = this.Invoke("GetEPG", new object[] {
                        sessionId,
                        timestamp});
            return ((EPG)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEPG(string sessionId, System.DateTime timestamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEPG", new object[] {
                        sessionId,
                        timestamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public EPG EndGetEPG(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((EPG)(results[0]));
        }
        
        /// <remarks/>
        public void GetEPGAsync(string sessionId, System.DateTime timestamp) {
            this.GetEPGAsync(sessionId, timestamp, null);
        }
        
        /// <remarks/>
        public void GetEPGAsync(string sessionId, System.DateTime timestamp, object userState) {
            if ((this.GetEPGOperationCompleted == null)) {
                this.GetEPGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEPGOperationCompleted);
            }
            this.InvokeAsync("GetEPG", new object[] {
                        sessionId,
                        timestamp}, this.GetEPGOperationCompleted, userState);
        }
        
        private void OnGetEPGOperationCompleted(object arg) {
            if ((this.GetEPGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEPGCompleted(this, new GetEPGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetEPGLocation", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public EPGLocation GetEPGLocation(string sessionId, System.DateTime timestamp, string region) {
            object[] results = this.Invoke("GetEPGLocation", new object[] {
                        sessionId,
                        timestamp,
                        region});
            return ((EPGLocation)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEPGLocation(string sessionId, System.DateTime timestamp, string region, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEPGLocation", new object[] {
                        sessionId,
                        timestamp,
                        region}, callback, asyncState);
        }
        
        /// <remarks/>
        public EPGLocation EndGetEPGLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((EPGLocation)(results[0]));
        }
        
        /// <remarks/>
        public void GetEPGLocationAsync(string sessionId, System.DateTime timestamp, string region) {
            this.GetEPGLocationAsync(sessionId, timestamp, region, null);
        }
        
        /// <remarks/>
        public void GetEPGLocationAsync(string sessionId, System.DateTime timestamp, string region, object userState) {
            if ((this.GetEPGLocationOperationCompleted == null)) {
                this.GetEPGLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEPGLocationOperationCompleted);
            }
            this.InvokeAsync("GetEPGLocation", new object[] {
                        sessionId,
                        timestamp,
                        region}, this.GetEPGLocationOperationCompleted, userState);
        }
        
        private void OnGetEPGLocationOperationCompleted(object arg) {
            if ((this.GetEPGLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEPGLocationCompleted(this, new GetEPGLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetNow", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public System.DateTime GetNow() {
            object[] results = this.Invoke("GetNow", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNow(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNow", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndGetNow(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetNowAsync() {
            this.GetNowAsync(null);
        }
        
        /// <remarks/>
        public void GetNowAsync(object userState) {
            if ((this.GetNowOperationCompleted == null)) {
                this.GetNowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNowOperationCompleted);
            }
            this.InvokeAsync("GetNow", new object[0], this.GetNowOperationCompleted, userState);
        }
        
        private void OnGetNowOperationCompleted(object arg) {
            if ((this.GetNowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNowCompleted(this, new GetNowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#SearchMovie", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public Movie[] SearchMovie(string sessionId, string str) {
            object[] results = this.Invoke("SearchMovie", new object[] {
                        sessionId,
                        str});
            return ((Movie[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchMovie(string sessionId, string str, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchMovie", new object[] {
                        sessionId,
                        str}, callback, asyncState);
        }
        
        /// <remarks/>
        public Movie[] EndSearchMovie(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Movie[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchMovieAsync(string sessionId, string str) {
            this.SearchMovieAsync(sessionId, str, null);
        }
        
        /// <remarks/>
        public void SearchMovieAsync(string sessionId, string str, object userState) {
            if ((this.SearchMovieOperationCompleted == null)) {
                this.SearchMovieOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchMovieOperationCompleted);
            }
            this.InvokeAsync("SearchMovie", new object[] {
                        sessionId,
                        str}, this.SearchMovieOperationCompleted, userState);
        }
        
        private void OnSearchMovieOperationCompleted(object arg) {
            if ((this.SearchMovieCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchMovieCompleted(this, new SearchMovieCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetGuide", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public Guide GetGuide(string sessionId) {
            object[] results = this.Invoke("GetGuide", new object[] {
                        sessionId});
            return ((Guide)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGuide(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGuide", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public Guide EndGetGuide(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Guide)(results[0]));
        }
        
        /// <remarks/>
        public void GetGuideAsync(string sessionId) {
            this.GetGuideAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void GetGuideAsync(string sessionId, object userState) {
            if ((this.GetGuideOperationCompleted == null)) {
                this.GetGuideOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGuideOperationCompleted);
            }
            this.InvokeAsync("GetGuide", new object[] {
                        sessionId}, this.GetGuideOperationCompleted, userState);
        }
        
        private void OnGetGuideOperationCompleted(object arg) {
            if ((this.GetGuideCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGuideCompleted(this, new GetGuideCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetGuideProgram", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GuideProgram[] GetGuideProgram(string sessionId, int channelId, System.DateTime startDate, System.DateTime stopDate) {
            object[] results = this.Invoke("GetGuideProgram", new object[] {
                        sessionId,
                        channelId,
                        startDate,
                        stopDate});
            return ((GuideProgram[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGuideProgram(string sessionId, int channelId, System.DateTime startDate, System.DateTime stopDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGuideProgram", new object[] {
                        sessionId,
                        channelId,
                        startDate,
                        stopDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public GuideProgram[] EndGetGuideProgram(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GuideProgram[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGuideProgramAsync(string sessionId, int channelId, System.DateTime startDate, System.DateTime stopDate) {
            this.GetGuideProgramAsync(sessionId, channelId, startDate, stopDate, null);
        }
        
        /// <remarks/>
        public void GetGuideProgramAsync(string sessionId, int channelId, System.DateTime startDate, System.DateTime stopDate, object userState) {
            if ((this.GetGuideProgramOperationCompleted == null)) {
                this.GetGuideProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGuideProgramOperationCompleted);
            }
            this.InvokeAsync("GetGuideProgram", new object[] {
                        sessionId,
                        channelId,
                        startDate,
                        stopDate}, this.GetGuideProgramOperationCompleted, userState);
        }
        
        private void OnGetGuideProgramOperationCompleted(object arg) {
            if ((this.GetGuideProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGuideProgramCompleted(this, new GetGuideProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetGuideProgramRecStat", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GuideProgramRecStat[] GetGuideProgramRecStat(string sessionId, int channelId) {
            object[] results = this.Invoke("GetGuideProgramRecStat", new object[] {
                        sessionId,
                        channelId});
            return ((GuideProgramRecStat[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGuideProgramRecStat(string sessionId, int channelId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGuideProgramRecStat", new object[] {
                        sessionId,
                        channelId}, callback, asyncState);
        }
        
        /// <remarks/>
        public GuideProgramRecStat[] EndGetGuideProgramRecStat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GuideProgramRecStat[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGuideProgramRecStatAsync(string sessionId, int channelId) {
            this.GetGuideProgramRecStatAsync(sessionId, channelId, null);
        }
        
        /// <remarks/>
        public void GetGuideProgramRecStatAsync(string sessionId, int channelId, object userState) {
            if ((this.GetGuideProgramRecStatOperationCompleted == null)) {
                this.GetGuideProgramRecStatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGuideProgramRecStatOperationCompleted);
            }
            this.InvokeAsync("GetGuideProgramRecStat", new object[] {
                        sessionId,
                        channelId}, this.GetGuideProgramRecStatOperationCompleted, userState);
        }
        
        private void OnGetGuideProgramRecStatOperationCompleted(object arg) {
            if ((this.GetGuideProgramRecStatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGuideProgramRecStatCompleted(this, new GetGuideProgramRecStatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetGuideMovieRecStat", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GuideMovieRecStat[] GetGuideMovieRecStat(string sessionId, int channelId) {
            object[] results = this.Invoke("GetGuideMovieRecStat", new object[] {
                        sessionId,
                        channelId});
            return ((GuideMovieRecStat[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGuideMovieRecStat(string sessionId, int channelId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGuideMovieRecStat", new object[] {
                        sessionId,
                        channelId}, callback, asyncState);
        }
        
        /// <remarks/>
        public GuideMovieRecStat[] EndGetGuideMovieRecStat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GuideMovieRecStat[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGuideMovieRecStatAsync(string sessionId, int channelId) {
            this.GetGuideMovieRecStatAsync(sessionId, channelId, null);
        }
        
        /// <remarks/>
        public void GetGuideMovieRecStatAsync(string sessionId, int channelId, object userState) {
            if ((this.GetGuideMovieRecStatOperationCompleted == null)) {
                this.GetGuideMovieRecStatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGuideMovieRecStatOperationCompleted);
            }
            this.InvokeAsync("GetGuideMovieRecStat", new object[] {
                        sessionId,
                        channelId}, this.GetGuideMovieRecStatOperationCompleted, userState);
        }
        
        private void OnGetGuideMovieRecStatOperationCompleted(object arg) {
            if ((this.GetGuideMovieRecStatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGuideMovieRecStatCompleted(this, new GetGuideMovieRecStatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#SendTvStat", RequestNamespace="http://homesyslite.timbuktu.hu/", OneWay=true)]
        public void SendTvStat(string sessionId, TvStat[] stat) {
            this.Invoke("SendTvStat", new object[] {
                        sessionId,
                        stat});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendTvStat(string sessionId, TvStat[] stat, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendTvStat", new object[] {
                        sessionId,
                        stat}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSendTvStat(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SendTvStatAsync(string sessionId, TvStat[] stat) {
            this.SendTvStatAsync(sessionId, stat, null);
        }
        
        /// <remarks/>
        public void SendTvStatAsync(string sessionId, TvStat[] stat, object userState) {
            if ((this.SendTvStatOperationCompleted == null)) {
                this.SendTvStatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTvStatOperationCompleted);
            }
            this.InvokeAsync("SendTvStat", new object[] {
                        sessionId,
                        stat}, this.SendTvStatOperationCompleted, userState);
        }
        
        private void OnSendTvStatOperationCompleted(object arg) {
            if ((this.SendTvStatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTvStatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Homesys#HomesysServer#GetTvStatByPortId", RequestNamespace="http://homesyslite.timbuktu.hu/", ResponseNamespace="http://homesyslite.timbuktu.hu/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public UserTvStat[] GetTvStatByPortId(string sessionId, System.DateTime date) {
            object[] results = this.Invoke("GetTvStatByPortId", new object[] {
                        sessionId,
                        date});
            return ((UserTvStat[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTvStatByPortId(string sessionId, System.DateTime date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTvStatByPortId", new object[] {
                        sessionId,
                        date}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserTvStat[] EndGetTvStatByPortId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTvStat[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTvStatByPortIdAsync(string sessionId, System.DateTime date) {
            this.GetTvStatByPortIdAsync(sessionId, date, null);
        }
        
        /// <remarks/>
        public void GetTvStatByPortIdAsync(string sessionId, System.DateTime date, object userState) {
            if ((this.GetTvStatByPortIdOperationCompleted == null)) {
                this.GetTvStatByPortIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTvStatByPortIdOperationCompleted);
            }
            this.InvokeAsync("GetTvStatByPortId", new object[] {
                        sessionId,
                        date}, this.GetTvStatByPortIdOperationCompleted, userState);
        }
        
        private void OnGetTvStatByPortIdOperationCompleted(object arg) {
            if ((this.GetTvStatByPortIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTvStatByPortIdCompleted(this, new GetTvStatByPortIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class UserInfo {
        
        private string emailField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string countryField;
        
        private string addressField;
        
        private string postalCodeField;
        
        private string phoneNumberField;
        
        private string genderField;
        
        private int parentalAgeField;
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public int ParentalAge {
            get {
                return this.parentalAgeField;
            }
            set {
                this.parentalAgeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class UserTvStat {
        
        private string usernameField;
        
        private TvStat[] watchListField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public TvStat[] WatchList {
            get {
                return this.watchListField;
            }
            set {
                this.watchListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class TvStat {
        
        private int channelIdField;
        
        private int programIdField;
        
        private System.DateTime startField;
        
        private System.DateTime stopField;
        
        /// <remarks/>
        public int ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProgramId {
            get {
                return this.programIdField;
            }
            set {
                this.programIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Stop {
            get {
                return this.stopField;
            }
            set {
                this.stopField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class GuideMovieRecStat {
        
        private int movieIdField;
        
        private string titleField;
        
        private int countField;
        
        /// <remarks/>
        public int MovieId {
            get {
                return this.movieIdField;
            }
            set {
                this.movieIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class GuideProgramRecStat {
        
        private int programIdField;
        
        private System.DateTime startDateField;
        
        private string titleField;
        
        private int countField;
        
        /// <remarks/>
        public int ProgramId {
            get {
                return this.programIdField;
            }
            set {
                this.programIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class GuideProgram {
        
        private int idField;
        
        private System.DateTime startDateField;
        
        private System.DateTime stopDateField;
        
        private string titleField;
        
        private string episodeTitleField;
        
        private string descriptionField;
        
        private int episodeNumberField;
        
        private int episodeCountField;
        
        private bool isRepeatField;
        
        private bool isLiveField;
        
        private int ratingField;
        
        private int yearField;
        
        private string movieTypeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StopDate {
            get {
                return this.stopDateField;
            }
            set {
                this.stopDateField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string EpisodeTitle {
            get {
                return this.episodeTitleField;
            }
            set {
                this.episodeTitleField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int EpisodeNumber {
            get {
                return this.episodeNumberField;
            }
            set {
                this.episodeNumberField = value;
            }
        }
        
        /// <remarks/>
        public int EpisodeCount {
            get {
                return this.episodeCountField;
            }
            set {
                this.episodeCountField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRepeat {
            get {
                return this.isRepeatField;
            }
            set {
                this.isRepeatField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLive {
            get {
                return this.isLiveField;
            }
            set {
                this.isLiveField = value;
            }
        }
        
        /// <remarks/>
        public int Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
        
        /// <remarks/>
        public int Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        public string MovieType {
            get {
                return this.movieTypeField;
            }
            set {
                this.movieTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class GuideChannel {
        
        private int idField;
        
        private string nameField;
        
        private string urlField;
        
        private byte[] logoField;
        
        private bool radioField;
        
        private string aliasesField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] Logo {
            get {
                return this.logoField;
            }
            set {
                this.logoField = value;
            }
        }
        
        /// <remarks/>
        public bool Radio {
            get {
                return this.radioField;
            }
            set {
                this.radioField = value;
            }
        }
        
        /// <remarks/>
        public string Aliases {
            get {
                return this.aliasesField;
            }
            set {
                this.aliasesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class Guide {
        
        private int pageField;
        
        private int maxPageField;
        
        private System.DateTime minDateField;
        
        private System.DateTime maxDateField;
        
        private GuideChannel[] channelsField;
        
        /// <remarks/>
        public int Page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        public int MaxPage {
            get {
                return this.maxPageField;
            }
            set {
                this.maxPageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MinDate {
            get {
                return this.minDateField;
            }
            set {
                this.minDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MaxDate {
            get {
                return this.maxDateField;
            }
            set {
                this.maxDateField = value;
            }
        }
        
        /// <remarks/>
        public GuideChannel[] Channels {
            get {
                return this.channelsField;
            }
            set {
                this.channelsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class EPGLocation {
        
        private System.DateTime dateField;
        
        private string urlField;
        
        private string jsonUrlField;
        
        private string bZip2UrlField;
        
        private string jsonBZip2UrlField;
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string JsonUrl {
            get {
                return this.jsonUrlField;
            }
            set {
                this.jsonUrlField = value;
            }
        }
        
        /// <remarks/>
        public string BZip2Url {
            get {
                return this.bZip2UrlField;
            }
            set {
                this.bZip2UrlField = value;
            }
        }
        
        /// <remarks/>
        public string JsonBZip2Url {
            get {
                return this.jsonBZip2UrlField;
            }
            set {
                this.jsonBZip2UrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class EPG {
        
        private System.DateTime dateField;
        
        private TuneRequestPackage[] tuneRequestPackagesField;
        
        private Channel[] channelsField;
        
        private Program[] programsField;
        
        private Episode[] episodesField;
        
        private Movie[] moviesField;
        
        private Cast[] castsField;
        
        private MovieType[] movieTypesField;
        
        private DVBCategory[] dVBCategoriesField;
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public TuneRequestPackage[] TuneRequestPackages {
            get {
                return this.tuneRequestPackagesField;
            }
            set {
                this.tuneRequestPackagesField = value;
            }
        }
        
        /// <remarks/>
        public Channel[] Channels {
            get {
                return this.channelsField;
            }
            set {
                this.channelsField = value;
            }
        }
        
        /// <remarks/>
        public Program[] Programs {
            get {
                return this.programsField;
            }
            set {
                this.programsField = value;
            }
        }
        
        /// <remarks/>
        public Episode[] Episodes {
            get {
                return this.episodesField;
            }
            set {
                this.episodesField = value;
            }
        }
        
        /// <remarks/>
        public Movie[] Movies {
            get {
                return this.moviesField;
            }
            set {
                this.moviesField = value;
            }
        }
        
        /// <remarks/>
        public Cast[] Casts {
            get {
                return this.castsField;
            }
            set {
                this.castsField = value;
            }
        }
        
        /// <remarks/>
        public MovieType[] MovieTypes {
            get {
                return this.movieTypesField;
            }
            set {
                this.movieTypesField = value;
            }
        }
        
        /// <remarks/>
        public DVBCategory[] DVBCategories {
            get {
                return this.dVBCategoriesField;
            }
            set {
                this.dVBCategoriesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class TuneRequestPackage {
        
        private string typeField;
        
        private string providerField;
        
        private string nameField;
        
        private TuneRequest[] tuneRequestsField;
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Provider {
            get {
                return this.providerField;
            }
            set {
                this.providerField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public TuneRequest[] TuneRequests {
            get {
                return this.tuneRequestsField;
            }
            set {
                this.tuneRequestsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class TuneRequest {
        
        private int frequencyField;
        
        private int videoStandardField;
        
        private int iFECMethodField;
        
        private int iFECRateField;
        
        private int oFECMethodField;
        
        private int oFECRateField;
        
        private int modulationField;
        
        private int symbolRateField;
        
        private int polarisationField;
        
        private int lNBSourceField;
        
        private int spectralInversionField;
        
        private int bandwidthField;
        
        private int lPIFECMethodField;
        
        private int lPIFECRateField;
        
        private int hAlphaField;
        
        private int guardField;
        
        private int transmissionModeField;
        
        private bool otherFrequencyInUseField;
        
        private string pathField;
        
        private int channelIdField;
        
        /// <remarks/>
        public int Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        public int VideoStandard {
            get {
                return this.videoStandardField;
            }
            set {
                this.videoStandardField = value;
            }
        }
        
        /// <remarks/>
        public int IFECMethod {
            get {
                return this.iFECMethodField;
            }
            set {
                this.iFECMethodField = value;
            }
        }
        
        /// <remarks/>
        public int IFECRate {
            get {
                return this.iFECRateField;
            }
            set {
                this.iFECRateField = value;
            }
        }
        
        /// <remarks/>
        public int OFECMethod {
            get {
                return this.oFECMethodField;
            }
            set {
                this.oFECMethodField = value;
            }
        }
        
        /// <remarks/>
        public int OFECRate {
            get {
                return this.oFECRateField;
            }
            set {
                this.oFECRateField = value;
            }
        }
        
        /// <remarks/>
        public int Modulation {
            get {
                return this.modulationField;
            }
            set {
                this.modulationField = value;
            }
        }
        
        /// <remarks/>
        public int SymbolRate {
            get {
                return this.symbolRateField;
            }
            set {
                this.symbolRateField = value;
            }
        }
        
        /// <remarks/>
        public int Polarisation {
            get {
                return this.polarisationField;
            }
            set {
                this.polarisationField = value;
            }
        }
        
        /// <remarks/>
        public int LNBSource {
            get {
                return this.lNBSourceField;
            }
            set {
                this.lNBSourceField = value;
            }
        }
        
        /// <remarks/>
        public int SpectralInversion {
            get {
                return this.spectralInversionField;
            }
            set {
                this.spectralInversionField = value;
            }
        }
        
        /// <remarks/>
        public int Bandwidth {
            get {
                return this.bandwidthField;
            }
            set {
                this.bandwidthField = value;
            }
        }
        
        /// <remarks/>
        public int LPIFECMethod {
            get {
                return this.lPIFECMethodField;
            }
            set {
                this.lPIFECMethodField = value;
            }
        }
        
        /// <remarks/>
        public int LPIFECRate {
            get {
                return this.lPIFECRateField;
            }
            set {
                this.lPIFECRateField = value;
            }
        }
        
        /// <remarks/>
        public int HAlpha {
            get {
                return this.hAlphaField;
            }
            set {
                this.hAlphaField = value;
            }
        }
        
        /// <remarks/>
        public int Guard {
            get {
                return this.guardField;
            }
            set {
                this.guardField = value;
            }
        }
        
        /// <remarks/>
        public int TransmissionMode {
            get {
                return this.transmissionModeField;
            }
            set {
                this.transmissionModeField = value;
            }
        }
        
        /// <remarks/>
        public bool OtherFrequencyInUse {
            get {
                return this.otherFrequencyInUseField;
            }
            set {
                this.otherFrequencyInUseField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public int ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class Channel {
        
        private int idField;
        
        private string nameField;
        
        private string urlField;
        
        private byte[] logoField;
        
        private bool radioField;
        
        private string aliasesField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] Logo {
            get {
                return this.logoField;
            }
            set {
                this.logoField = value;
            }
        }
        
        /// <remarks/>
        public bool Radio {
            get {
                return this.radioField;
            }
            set {
                this.radioField = value;
            }
        }
        
        /// <remarks/>
        public string Aliases {
            get {
                return this.aliasesField;
            }
            set {
                this.aliasesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class Program {
        
        private int idField;
        
        private int channelIdField;
        
        private int episodeIdField;
        
        private int movieIdField;
        
        private System.DateTime startDateField;
        
        private System.DateTime stopDateField;
        
        private bool isRepeatField;
        
        private bool isLiveField;
        
        private bool isRecommendedField;
        
        private bool deletedField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        public int EpisodeId {
            get {
                return this.episodeIdField;
            }
            set {
                this.episodeIdField = value;
            }
        }
        
        /// <remarks/>
        public int MovieId {
            get {
                return this.movieIdField;
            }
            set {
                this.movieIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StopDate {
            get {
                return this.stopDateField;
            }
            set {
                this.stopDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRepeat {
            get {
                return this.isRepeatField;
            }
            set {
                this.isRepeatField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLive {
            get {
                return this.isLiveField;
            }
            set {
                this.isLiveField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRecommended {
            get {
                return this.isRecommendedField;
            }
            set {
                this.isRecommendedField = value;
            }
        }
        
        /// <remarks/>
        public bool Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class Episode {
        
        private int idField;
        
        private int movieIdField;
        
        private string titleField;
        
        private string descriptionField;
        
        private int episodeNumberField;
        
        private bool tempField;
        
        private EpisodeCast[] episodeCastListField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int MovieId {
            get {
                return this.movieIdField;
            }
            set {
                this.movieIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int EpisodeNumber {
            get {
                return this.episodeNumberField;
            }
            set {
                this.episodeNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool Temp {
            get {
                return this.tempField;
            }
            set {
                this.tempField = value;
            }
        }
        
        /// <remarks/>
        public EpisodeCast[] EpisodeCastList {
            get {
                return this.episodeCastListField;
            }
            set {
                this.episodeCastListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class EpisodeCast {
        
        private int castIdField;
        
        private int roleIdField;
        
        private string nameField;
        
        /// <remarks/>
        public int CastId {
            get {
                return this.castIdField;
            }
            set {
                this.castIdField = value;
            }
        }
        
        /// <remarks/>
        public int RoleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class Movie {
        
        private int idField;
        
        private int movieTypeIdField;
        
        private int dVBCategoryIdField;
        
        private string titleField;
        
        private string descriptionField;
        
        private int ratingField;
        
        private int yearField;
        
        private int episodeCountField;
        
        private bool tempField;
        
        private bool hasPictureField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int MovieTypeId {
            get {
                return this.movieTypeIdField;
            }
            set {
                this.movieTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int DVBCategoryId {
            get {
                return this.dVBCategoryIdField;
            }
            set {
                this.dVBCategoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
        
        /// <remarks/>
        public int Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        public int EpisodeCount {
            get {
                return this.episodeCountField;
            }
            set {
                this.episodeCountField = value;
            }
        }
        
        /// <remarks/>
        public bool Temp {
            get {
                return this.tempField;
            }
            set {
                this.tempField = value;
            }
        }
        
        /// <remarks/>
        public bool HasPicture {
            get {
                return this.hasPictureField;
            }
            set {
                this.hasPictureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class Cast {
        
        private int idField;
        
        private string nameField;
        
        private string movieNameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string MovieName {
            get {
                return this.movieNameField;
            }
            set {
                this.movieNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class MovieType {
        
        private int idField;
        
        private string nameShortField;
        
        private string nameLongField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string NameShort {
            get {
                return this.nameShortField;
            }
            set {
                this.nameShortField = value;
            }
        }
        
        /// <remarks/>
        public string NameLong {
            get {
                return this.nameLongField;
            }
            set {
                this.nameLongField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class DVBCategory {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class RelatedProgram {
        
        private int idField;
        
        private int otherIdField;
        
        private int typeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int OtherId {
            get {
                return this.otherIdField;
            }
            set {
                this.otherIdField = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class AppVersion {
        
        private string versionField;
        
        private string urlField;
        
        private bool requiredField;
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public bool Required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class Recording {
        
        private int idField;
        
        private int programIdField;
        
        private string recordingStateField;
        
        private string stateTextField;
        
        private System.Guid machineIdField;
        
        private int channelIdField;
        
        private System.DateTime startDateField;
        
        private System.DateTime stopDateField;
        
        private System.Guid tunerIdField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int ProgramId {
            get {
                return this.programIdField;
            }
            set {
                this.programIdField = value;
            }
        }
        
        /// <remarks/>
        public string RecordingState {
            get {
                return this.recordingStateField;
            }
            set {
                this.recordingStateField = value;
            }
        }
        
        /// <remarks/>
        public string StateText {
            get {
                return this.stateTextField;
            }
            set {
                this.stateTextField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid MachineId {
            get {
                return this.machineIdField;
            }
            set {
                this.machineIdField = value;
            }
        }
        
        /// <remarks/>
        public int ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StopDate {
            get {
                return this.stopDateField;
            }
            set {
                this.stopDateField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid TunerId {
            get {
                return this.tunerIdField;
            }
            set {
                this.tunerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class Machine {
        
        private System.Guid idField;
        
        private string nameField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class Tuner {
        
        private int sequenceNumberField;
        
        private System.Guid idField;
        
        /// <remarks/>
        public int SequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class MachineRegistrationData {
        
        private System.Guid machineIdField;
        
        private Tuner[] tunerListField;
        
        /// <remarks/>
        public System.Guid MachineId {
            get {
                return this.machineIdField;
            }
            set {
                this.machineIdField = value;
            }
        }
        
        /// <remarks/>
        public Tuner[] TunerList {
            get {
                return this.tunerListField;
            }
            set {
                this.tunerListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://homesyslite.timbuktu.hu/")]
    public partial class TunerData {
        
        private int sequenceNumberField;
        
        private string clientTunerDataField;
        
        private string friendlyNameField;
        
        private string displayNameField;
        
        /// <remarks/>
        public int SequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ClientTunerData {
            get {
                return this.clientTunerDataField;
            }
            set {
                this.clientTunerDataField = value;
            }
        }
        
        /// <remarks/>
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void InitiateSessionCompletedEventHandler(object sender, InitiateSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void SetLanguageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void InitiateSessionWithLangCompletedEventHandler(object sender, InitiateSessionWithLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateSessionWithLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateSessionWithLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void UserExistsCompletedEventHandler(object sender, UserExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void LoginExistsCompletedEventHandler(object sender, LoginExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void RegisterUserCompletedEventHandler(object sender, RegisterUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void SetUserInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void RegisterMachineCompletedEventHandler(object sender, RegisterMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MachineRegistrationData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MachineRegistrationData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void UnregisterMachineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void ListMachinesCompletedEventHandler(object sender, ListMachinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMachinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMachinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Machine[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Machine[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void AddRecordingCompletedEventHandler(object sender, AddRecordingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRecordingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRecordingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void UpdateRecordingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void DeleteRecordingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void ListRecordingsCompletedEventHandler(object sender, ListRecordingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRecordingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRecordingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Recording[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Recording[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void AddRecordingByPortIdCompletedEventHandler(object sender, AddRecordingByPortIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRecordingByPortIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRecordingByPortIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void DeleteRecordingByPortIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void ListRecordingsByPortIdCompletedEventHandler(object sender, ListRecordingsByPortIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRecordingsByPortIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRecordingsByPortIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Recording[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Recording[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetAppVersionCompletedEventHandler(object sender, GetAppVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppVersion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppVersion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void VersionCheckCompletedEventHandler(object sender, VersionCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VersionCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VersionCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void BeginUpdateCompletedEventHandler(object sender, BeginUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void EndUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetTuneRequestPackagesCompletedEventHandler(object sender, GetTuneRequestPackagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTuneRequestPackagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTuneRequestPackagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TuneRequestPackage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TuneRequestPackage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetTuneRequestPackagesForRegionCompletedEventHandler(object sender, GetTuneRequestPackagesForRegionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTuneRequestPackagesForRegionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTuneRequestPackagesForRegionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TuneRequestPackage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TuneRequestPackage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetChannelsCompletedEventHandler(object sender, GetChannelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Channel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Channel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetChannelRankCompletedEventHandler(object sender, GetChannelRankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelRankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelRankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void SetUnknownChannelsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetMovieRankCompletedEventHandler(object sender, GetMovieRankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMovieRankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMovieRankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetProgramsCompletedEventHandler(object sender, GetProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Program[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Program[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetEpisodesCompletedEventHandler(object sender, GetEpisodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEpisodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEpisodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Episode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Episode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetMoviesCompletedEventHandler(object sender, GetMoviesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMoviesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMoviesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Movie[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Movie[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetCastCompletedEventHandler(object sender, GetCastCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCastCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCastCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cast[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cast[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetMovieTypesCompletedEventHandler(object sender, GetMovieTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMovieTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMovieTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MovieType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MovieType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetDVBCategoryCompletedEventHandler(object sender, GetDVBCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDVBCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDVBCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DVBCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DVBCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetRelatedProgramsCompletedEventHandler(object sender, GetRelatedProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelatedProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelatedProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelatedProgram[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelatedProgram[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetEPGCompletedEventHandler(object sender, GetEPGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEPGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEPGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EPG Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EPG)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetEPGLocationCompletedEventHandler(object sender, GetEPGLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEPGLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEPGLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EPGLocation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EPGLocation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetNowCompletedEventHandler(object sender, GetNowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void SearchMovieCompletedEventHandler(object sender, SearchMovieCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchMovieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchMovieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Movie[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Movie[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetGuideCompletedEventHandler(object sender, GetGuideCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGuideCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGuideCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Guide Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Guide)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetGuideProgramCompletedEventHandler(object sender, GetGuideProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGuideProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGuideProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GuideProgram[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GuideProgram[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetGuideProgramRecStatCompletedEventHandler(object sender, GetGuideProgramRecStatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGuideProgramRecStatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGuideProgramRecStatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GuideProgramRecStat[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GuideProgramRecStat[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetGuideMovieRecStatCompletedEventHandler(object sender, GetGuideMovieRecStatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGuideMovieRecStatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGuideMovieRecStatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GuideMovieRecStat[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GuideMovieRecStat[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void SendTvStatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetTvStatByPortIdCompletedEventHandler(object sender, GetTvStatByPortIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTvStatByPortIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTvStatByPortIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserTvStat[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTvStat[])(this.results[0]));
            }
        }
    }
}
